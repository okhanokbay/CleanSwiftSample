//
//  LoginViewController.swift
//  CleanSwiftSample
//
//  Created by Okhan Okbay on 24.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: class {
  func displayMessages(viewModel: Login.ViewModel)
  func displayAlert(viewModel: Login.ViewModel)
}

final class LoginViewController: UIViewController {
  
  private var interactor: LoginBusinessLogic!
  private var router: (LoginRoutingLogic & LoginDataPassing)!
  
  @IBOutlet private weak var textFieldUsername: UITextField!
  @IBOutlet private weak var buttonContinue: UIButton!
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let dataStore = LoginDataStore()
    let presenter = LoginPresenter(displayer: self)
    let interactor = LoginInteractor(dataStore: dataStore, presenter: presenter)
    let router = LoginRouter(dataStore: dataStore, viewController: self)
    
    self.interactor = interactor
    self.router = router
  }
  
  override func viewDidLoad() {
    super.viewDidLoad()
    
    textFieldUsername.attributedPlaceholder = NSAttributedString(string: Strings.usernamePlaceholder,
                                                                 attributes: [.foregroundColor: UIColor.darkGray])
  }
  
  @IBAction func buttonContinueTapped(_ sender: Any) {
    let request = Login.Request(username: textFieldUsername.text)
    interactor.usernameEntered(request: request)
  }
}

// MARK: Display logic
extension LoginViewController: LoginDisplayLogic {
  func displayMessages(viewModel: Login.ViewModel) {
    router.routeToMessages()
  }
  
  func displayAlert(viewModel: Login.ViewModel) {
    present(viewModel.alert!.alertController, animated: true, completion: nil)
  }
}
