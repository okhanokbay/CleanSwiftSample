//
//  LoginInteractor.swift
//  CleanSwiftSample
//
//  Created by Okhan Okbay on 24.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import Foundation

protocol LoginBusinessLogic: AnyObject {
  func checkSession(request: AutoLogin.Request)
  func usernameEntered(request: Login.Request)
}

final class LoginInteractor {
  
  private let dataStore: LoginDataStoreProtocol
  private let presenter: LoginPresentationLogic
  
  init(dataStore: LoginDataStoreProtocol,
       presenter: LoginPresentationLogic) {
    
    self.dataStore = dataStore
    self.presenter = presenter
  }
}

extension LoginInteractor: LoginBusinessLogic {
  func checkSession(request: AutoLogin.Request) {
    if let username = LocalProperties.username {
      dataStore.username = username
      
      let response = AutoLogin.Response()
      presenter.presentAutoLogin(response: response)
    }
  }
  
  func usernameEntered(request: Login.Request) {
    let username = request.username ?? ""
    let response = Login.Response()
    
    if username.count > ValidationRules.usernameMinCharLength {
      dataStore.username = username
      LocalProperties.username = username
      
      presenter.presentMessages(response: response)
      
    } else {
      presenter.presentAlert(response: response)
    }
  }
}
